version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker2:9092,PLAINTEXT_INTERNAL://localhost:29092
      SCHEMA_REGISTRY_DEBUG: 'true'

  broker1:
    image: confluentinc/cp-kafka:latest
    hostname: broker1
    ports:
      - "19092:19092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,PLAINTEXT_INTERNAL://localhost:19092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  broker2:
    image: confluentinc/cp-kafka:latest
    hostname: broker2
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092,PLAINTEXT_INTERNAL://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  broker3:
    image: confluentinc/cp-kafka:latest
    hostname: broker3
    ports:
      - "39092:39092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9092,PLAINTEXT_INTERNAL://localhost:39092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3

  
  server:
    build: ./DockerCompose/server
    ports:
      - "50052:50052"  # Porta 50051 del container esposta sulla 8081 dell'host

    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=1234
      - DATABASE_NAME=yfinance_db
      - DATABASE_PORT=3306
    depends_on:
      - db
    restart: always
  
  data_collector:
    build: ./DockerCompose/DataCollector
    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=1234
      - DATABASE_NAME=yfinance_db
      - KAFKA_BROKER=broker1:9092,broker2:9092,broker3:9092  
    depends_on:
      - db
      - broker1
      - broker2
      - broker3  
    restart: always

  db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "1234"         # Password per l'utente root
      MYSQL_DATABASE: "yfinance_db"      # Nome del database creato automaticamente       
    ports:
      - "3308:3306"  # Mappa la porta 3306 del container alla porta 3308 dell'host

    volumes:
      - ./db-data:/var/lib/mysql  # Volume per salvare i dati del database
  
  telegram_bot:
    build: ./DockerCompose/Get_chat_id
    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=1234
      - DATABASE_NAME=yfinance_db
      - BOT_TOKEN=7587852566:AAH0pXlB_VHM-UW1BZwhed5A9WzQnvLd5y8
      - KAFKA_BROKER=broker1:9092,broker2:9092,broker3:9092  
    depends_on:
      - db
      - broker1
      - broker2
      - broker3 
    restart: always


  alert_system:
    build: ./DockerCompose/AlertSystem
    environment:
      - DATABASE_HOST=db
      - DATABASE_USER=root
      - DATABASE_PASSWORD=1234
      - DATABASE_NAME=yfinance_db
      - KAFKA_BROKER=broker1:9092,broker2:9092,broker3:9092  # Modifica per usare tutti e tre i broker
    depends_on:
      - db
      - broker1
      - broker2
      - broker3  
    restart: always

  alert_notifier_system:
    build: ./DockerCompose/AlertNotifierSystem
    environment:
    - KAFKA_BROKER=broker1:9092,broker2:9092,broker3:9092  # Modifica per usare tutti e tre i broker
    depends_on:
      - db
      - broker1
      - broker2
      - broker3  
    restart: always
      
volumes:
  db-data:  # Definizione del volume per il database
